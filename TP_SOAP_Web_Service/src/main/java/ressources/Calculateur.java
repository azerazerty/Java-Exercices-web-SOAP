
package ressources;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Calculateur", targetNamespace = "http://example.dz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculateur {


    /**
     * 
     * @param number1
     * @param number2
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "sum", targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://example.dz/", className = "ressources.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://example.dz/", className = "ressources.AddResponse")
    @Action(input = "http://example.dz/Calculateur/addRequest", output = "http://example.dz/Calculateur/addResponse")
    public int add(
        @WebParam(name = "number1", targetNamespace = "")
        int number1,
        @WebParam(name = "number2", targetNamespace = "")
        int number2);

    /**
     * 
     * @param factor1
     * @param factor2
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "product", targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://example.dz/", className = "ressources.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://example.dz/", className = "ressources.MultiplyResponse")
    @Action(input = "http://example.dz/Calculateur/multiplyRequest", output = "http://example.dz/Calculateur/multiplyResponse")
    public int multiply(
        @WebParam(name = "factor1", targetNamespace = "")
        int factor1,
        @WebParam(name = "factor2", targetNamespace = "")
        int factor2);

    /**
     * 
     * @param minuend
     * @param subtrahend
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "difference", targetNamespace = "")
    @RequestWrapper(localName = "subtract", targetNamespace = "http://example.dz/", className = "ressources.Subtract")
    @ResponseWrapper(localName = "subtractResponse", targetNamespace = "http://example.dz/", className = "ressources.SubtractResponse")
    @Action(input = "http://example.dz/Calculateur/subtractRequest", output = "http://example.dz/Calculateur/subtractResponse")
    public int subtract(
        @WebParam(name = "minuend", targetNamespace = "")
        int minuend,
        @WebParam(name = "subtrahend", targetNamespace = "")
        int subtrahend);

    /**
     * 
     * @param dividend
     * @param divisor
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(name = "quotient", targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://example.dz/", className = "ressources.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://example.dz/", className = "ressources.DivideResponse")
    @Action(input = "http://example.dz/Calculateur/divideRequest", output = "http://example.dz/Calculateur/divideResponse")
    public float divide(
        @WebParam(name = "dividend", targetNamespace = "")
        int dividend,
        @WebParam(name = "divisor", targetNamespace = "")
        int divisor);

}
